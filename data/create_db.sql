BEGIN;                                                                -- On démmare une transaction afin de s'assurer de la cohérence globale de la BDD
DROP TABLE IF EXISTS "list", "card", "tag", "card_has_tag";           -- D'abord on supprimer les tables 'si elles existent'

/* Première table : List */
CREATE TABLE "list" (
  "id" INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,              -- GENERATED ALWAYS: Notre SGBD va toujours générer une valeur.
                                                                      -- GENERATED BY DEFAULT: Notre SGBD va générer par default une valeur, mais on a encore l'opportunité de lui fournir une valeur manuellement.
  "name" TEXT NOT NULL DEFAULT '',                                    -- Colonne "name" de type texte, non nulle avec une valeur par défaut vide ('')
  "position" INTEGER NOT NULL DEFAULT 0,                              -- Colonne "position" de type entier, non nulle avec une valeur par défaut de 0
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT NOW(),                    -- Pour avoir la date et l'heure on utilise le type "Timestamp", Et pour etre encore plus précis on utilisera le type "timestampz" qui contient en plus de la date et l'heure le fuseau horraire défini dans les locales du serveur.
  "updated_at" TIMESTAMPTZ                                            -- Colonne "updated_at" de type "timestampz" qui peut être laissée vide pour le moment
);

/* Deuxième table : Card */
CREATE TABLE "card" (
  "id" INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,              -- Colonne "id" qui sert de clé primaire générée automatiquement
  "title" TEXT NOT NULL DEFAULT '',                                   -- Colonne "title" de type texte, non nulle avec une valeur par défaut vide ('')
  "color" TEXT NOT NULL DEFAULT '#FFF',                               -- Colonne "color" de type texte, non nulle avec une valeur par défaut de '#FFF'
  "list_id" INTEGER NOT NULL REFERENCES list("id") ON DELETE CASCADE, -- si l'on veut pouvoir supprimer une liste qui contient des cartes, on est obligé de rajouter "ON DELETE CASCADE" qui aura pour conséquence de supprimer toutes les cartes qui font référence à la liste
  "position" INTEGER NOT NULL DEFAULT 0,                              -- Colonne "position" de type entier, non nulle avec une valeur par défaut de 0
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT NOW(),                    -- Colonne "created_at" de type "timestampz" non nulle avec la valeur par défaut de la date et de l'heure actuelles
  "updated_at" TIMESTAMPTZ                                            -- Colonne "updated_at" de type "timestampz" qui peut être laissée vide pour le moment
);

/* Troisième table : Tag */
CREATE TABLE "tag" (
  "id" INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,              -- Colonne "id" qui sert de clé primaire générée automatiquement
  "name" TEXT NOT NULL DEFAULT '',                                    -- Colonne "name" de type texte, non nulle avec une valeur par défaut vide ('')
  "color" TEXT NOT NULL DEFAULT '#FFF',                               -- Colonne "color" de type texte, non nulle avec une valeur par défaut de '#FFF'
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT NOW(),                    -- Colonne "created_at" de type "timestampz" non nulle avec la valeur par défaut de la date et de l'heure actuelles
  "updated_at" TIMESTAMPTZ                                            -- Colonne "updated_at" de type "timestampz" qui peut être laissée vide pour le moment
);

/* Table de liaison */
CREATE TABLE "card_has_tag" (
  "card_id" INTEGER NOT NULL REFERENCES card("id") ON DELETE CASCADE, -- si l'on veut pouvoir supprimer une carte ou un tag, on est obligé de rajouter "ON DELETE CASCADE" qui aura pour conséquence de supprimer les associations qui font référence a la carte ou le tag supprimé.
  "tag_id" INTEGER NOT NULL REFERENCES tag("id") ON DELETE CASCADE,   -- Colonne "tag_id" de type entier, non nulle, faisant référence à la colonne "id" de la table "tag" avec une action "ON DELETE CASCADE"
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT NOW()                     -- Colonne "created_at" de type "timestampz" non nulle avec la valeur par défaut de la date et de l'heure actuelles
                                                                      -- ici pas d'updated_at car une relation ne se met pas à jour, soit on l'ajoute soit on la supprime
  );     

/*SEEDING - Une fois les tables crées, on va les remplir */
INSERT INTO "list" ("name")                                           -- Insertion d'une nouvelle liste dans la table "list" 
VALUES ('Première liste');                                            -- avec le nom "première liste"

INSERT INTO "card" ("title", "color", "list_id")                      -- Insertion de nouvelles carte dans la table "card" 
VALUES ('Carte 1', '#fff696', 1),                                     -- avec le titre "Carte 1", la couleur "#fff696" et en référence à la liste ayant l'ID 1
       ('Carte 2', '#c1e7ff', 1);                                     -- avec le titre "Carte 2", la couleur "#c1e7ff" et en référence à la liste ayant l'ID 1                                

INSERT INTO "tag" ("name", "color")                                   -- Insertion d'un nouveau tag dans la table "tag" 
VALUES ('Urgent', '#F00');                                            -- avec le nom "Urgent" et la couleur "#F00"

INSERT INTO "card_has_tag" ("card_id", "tag_id")                      -- Insertion d'une nouvelle relation entre la carte ayant l'ID 1 et le tag ayant l'ID 1 dans la table de liaison "card_has_tag"
VALUES (1,1);

COMMIT;                                                               -- On valide la transaction.